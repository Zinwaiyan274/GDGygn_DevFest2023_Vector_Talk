"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Operation:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _OperationEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Operation.ValueType],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ADD: _Operation.ValueType  # 0
    UPDATE: _Operation.ValueType  # 1
    UPSERT: _Operation.ValueType  # 2
    DELETE: _Operation.ValueType  # 3

class Operation(_Operation, metaclass=_OperationEnumTypeWrapper): ...

ADD: Operation.ValueType  # 0
UPDATE: Operation.ValueType  # 1
UPSERT: Operation.ValueType  # 2
DELETE: Operation.ValueType  # 3
global___Operation = Operation

class _ScalarEncoding:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ScalarEncodingEnumTypeWrapper(
    google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
        _ScalarEncoding.ValueType
    ],
    builtins.type,
):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FLOAT32: _ScalarEncoding.ValueType  # 0
    INT32: _ScalarEncoding.ValueType  # 1

class ScalarEncoding(_ScalarEncoding, metaclass=_ScalarEncodingEnumTypeWrapper): ...

FLOAT32: ScalarEncoding.ValueType  # 0
INT32: ScalarEncoding.ValueType  # 1
global___ScalarEncoding = ScalarEncoding

@typing_extensions.final
class Vector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DIMENSION_FIELD_NUMBER: builtins.int
    VECTOR_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    dimension: builtins.int
    vector: builtins.bytes
    encoding: global___ScalarEncoding.ValueType
    def __init__(
        self,
        *,
        dimension: builtins.int = ...,
        vector: builtins.bytes = ...,
        encoding: global___ScalarEncoding.ValueType = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "dimension", b"dimension", "encoding", b"encoding", "vector", b"vector"
        ],
    ) -> None: ...

global___Vector = Vector

@typing_extensions.final
class UpdateMetadataValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STRING_VALUE_FIELD_NUMBER: builtins.int
    INT_VALUE_FIELD_NUMBER: builtins.int
    FLOAT_VALUE_FIELD_NUMBER: builtins.int
    string_value: builtins.str
    int_value: builtins.int
    float_value: builtins.float
    def __init__(
        self,
        *,
        string_value: builtins.str = ...,
        int_value: builtins.int = ...,
        float_value: builtins.float = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "float_value",
            b"float_value",
            "int_value",
            b"int_value",
            "string_value",
            b"string_value",
            "value",
            b"value",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "float_value",
            b"float_value",
            "int_value",
            b"int_value",
            "string_value",
            b"string_value",
            "value",
            b"value",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["value", b"value"]
    ) -> (
        typing_extensions.Literal["string_value", "int_value", "float_value"] | None
    ): ...

global___UpdateMetadataValue = UpdateMetadataValue

@typing_extensions.final
class UpdateMetadata(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___UpdateMetadataValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___UpdateMetadataValue | None = ...,
        ) -> None: ...
        def HasField(
            self, field_name: typing_extensions.Literal["value", b"value"]
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing_extensions.Literal["key", b"key", "value", b"value"],
        ) -> None: ...

    METADATA_FIELD_NUMBER: builtins.int
    @property
    def metadata(
        self,
    ) -> google.protobuf.internal.containers.MessageMap[
        builtins.str, global___UpdateMetadataValue
    ]: ...
    def __init__(
        self,
        *,
        metadata: collections.abc.Mapping[builtins.str, global___UpdateMetadataValue]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["metadata", b"metadata"]
    ) -> None: ...

global___UpdateMetadata = UpdateMetadata

@typing_extensions.final
class SubmitEmbeddingRecord(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    VECTOR_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    OPERATION_FIELD_NUMBER: builtins.int
    id: builtins.str
    @property
    def vector(self) -> global___Vector: ...
    @property
    def metadata(self) -> global___UpdateMetadata: ...
    operation: global___Operation.ValueType
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        vector: global___Vector | None = ...,
        metadata: global___UpdateMetadata | None = ...,
        operation: global___Operation.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_metadata",
            b"_metadata",
            "_vector",
            b"_vector",
            "metadata",
            b"metadata",
            "vector",
            b"vector",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_metadata",
            b"_metadata",
            "_vector",
            b"_vector",
            "id",
            b"id",
            "metadata",
            b"metadata",
            "operation",
            b"operation",
            "vector",
            b"vector",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_metadata", b"_metadata"]
    ) -> typing_extensions.Literal["metadata"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_vector", b"_vector"]
    ) -> typing_extensions.Literal["vector"] | None: ...

global___SubmitEmbeddingRecord = SubmitEmbeddingRecord
